image:
  repository: parity/polkadot
  tag: latest
  pullPolicy: Always

initContainer:
  image:
    repository: crazymax/7zip
    tag: latest

googleCloudSdk:
  image:
    repository: google/cloud-sdk
    tag: slim # more lightweight than the full image and still contains gsutil
  #serviceAccountKey: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

ingress:
  enabled: false
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  rules: []
  #  - host: chart-example.local
  #    paths:
  #      - serviceName: node
  #        servicePort: 9944
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

node:
  chain: "polkadot"
  dataVolumeSize: 100Gi
  replicas: 1
  #chainDataSnapshotUrl: ""
  chainDataSnapshotExtractionPath: "/data/chains/${CHAIN_PATH}"
  #chainPath: ""
  #chainDataKubernetesVolumeSnapshot: ""
  #chainDataGcsBucketUrl: ""
  flags:
    - "--prometheus-external"
    - "--rpc-external"
    - "--rpc-cors"
    - "all"
  resources: {}
  serviceMonitor:
    enabled: false
    #namespace: monitoring
    #interval: 10s
    # scrapeTimeout: 10s

substrateApiSidecar:
  enabled: false
  image:
    repository: parity/substrate-api-sidecar
    tag: latest
  env: {}
  resources: {}

podAnnotations: {}

nodeSelector: {}

terminationGracePeriodSeconds: 60

tolerations: []

affinity: {}

storageClass: "default"
